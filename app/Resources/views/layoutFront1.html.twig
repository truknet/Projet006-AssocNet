<!DOCTYPE html>
<html lang="{{ app.request.locale }}">
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta name="description" content="">
        <meta name="author" content="">
        <link rel="icon" type="image/x-icon" href="{{ asset('favicon.ico') }}" />

        <!-- Custom styles for this template -->
        <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css">
        <link rel="stylesheet" href="{{ asset(''~ config.loadConfig.themeFront ) }}" />
        <link rel="stylesheet" href="{{ asset('css/font-awesome-4.7.0/css/font-awesome.min.css') }}" />
        <link rel="stylesheet" href="{{ asset('css/bootstrap-datetimepicker.min.css') }}" />
        <link rel="stylesheet" href="{{ asset('css/main.css') }}" />

        <!--[if IE]><link rel="shortcut icon" type="image/x-icon" href="{{ asset('favicon.ico') }}" /><![endif]-->
        <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
        <link href="{{ asset('css/ie10-viewport-bug-workaround.css') }}" rel="stylesheet">
        <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
        <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
        <![endif]-->

        {% block stylesheet %}{% endblock %}
        <title>{% block title %}{% endblock %}AssocNet</title>

    </head>
    <body>




        {{ include('Front/_navbar.html.twig') }}
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    {{ include('Commun/_flashbag.html.twig') }}

                    {% block body %}

                    {% endblock %}

                </div>
                <div class="col-md-3">
                    {{ render(controller('AppBundle:FrontAssociation:sidebarViewLastAssociations')) }}
                </div>
            </div>
        </div>
        {{ include('Front/_footer.html.twig') }}


        <div class="cRetour"></div>

        <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
        <script src="{{ asset('js/ie10-viewport-bug-workaround.js') }}"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
        <script src="{{ asset('js/bootstrap.min.js') }}"></script>
        <script src="{{ asset('js/moment-with-locales.min.js') }}"></script>
        <script src="{{ asset('js/bootstrap-datetimepicker.min.js') }}"></script>
        <script src="{{ asset('js/main.js') }}"></script>
        <script>
            $(function () {
                $('.input-group.date').datetimepicker({
                    locale: "{{ app.request.locale }}",
                    format: 'DD/MM/YYYY'
                });
            });
        </script>

        <script>
            // This example displays an address form, using the autocomplete feature
            // of the Google Places API to help users fill in the information.

            // This example requires the Places library. Include the libraries=places
            // parameter when you first load the API. For example:
            // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

            var placeSearch, autocomplete;
            var componentForm = {
                street_number: 'short_name',
                route: 'long_name',
                locality: 'long_name',
                administrative_area_level_1: 'short_name',
                administrative_area_level_2: 'short_name',
                country: 'long_name',
                postal_code: 'short_name'
            };

            function initAutocomplete() {
                // Create the autocomplete object, restricting the search to geographical
                // location types.
                autocomplete = new google.maps.places.Autocomplete(
                    /** @type {!HTMLInputElement} */(document.getElementById('appbundle_associations_searchaddress')),
                    {types: ['geocode']});

                // When the user selects an address from the dropdown, populate the address
                // fields in the form.
                autocomplete.addListener('place_changed', fillInAddress);
            }

            function fillInAddress() {
                // Get the place details from the autocomplete object.
                // Obtenez les détails de l'endroit à partir de l'objet autocomplete.
                var place = autocomplete.getPlace();
                console.log(place);
                console.log(place.geometry.location.lat);
                document.getElementById('appbundle_associations_numstreet').value = place.address_components[0].short_name;
                document.getElementById('appbundle_associations_address1').value = place.address_components[1].long_name;
                document.getElementById('appbundle_associations_city').value = place.address_components[2].long_name;
                document.getElementById('appbundle_associations_department').value = place.address_components[3].short_name;
                document.getElementById('appbundle_associations_region').value = place.address_components[4].short_name;
                document.getElementById('appbundle_associations_country').value = place.address_components[5].long_name;
                document.getElementById('appbundle_associations_postalcode').value = place.address_components[6].short_name;
                document.getElementById('appbundle_associations_placeId').value = place.place_id;

            }

            // Bias the autocomplete object to the user's geographical location,
            // as supplied by the browser's 'navigator.geolocation' object.
            function geolocate() {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function(position) {
                        var geolocation = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };
                        console.log(geolocation);
                        var circle = new google.maps.Circle({
                            center: geolocation,
                            radius: position.coords.accuracy
                        });
                        autocomplete.setBounds(circle.getBounds());
                    });
                }
            }
        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAGTju5hw07K-6zRgQXRrx5zXo_FrKic7A &libraries=places&callback=initAutocomplete" async defer></script>

        {% block javascripts %}{% endblock %}
    </body>
</html>




